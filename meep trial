#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jan 20 16:19:20 2022

@author: go34660
"""
import meep as mp
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits import mplot3d

#%%
resolution = 25 #resolution per unit length
cell = mp.Vector3(8,20) #cell size
pml_layers = [mp.PML(1.0,direction=mp.Y)] #absorbing layers the waves go around (periodic boundary conditions)
theta = np.pi/3 #rotation angle

k = mp.Vector3(0,1,0) #k vector which decides the dicrection the wave travels in

def ampfunc(v3): #amplitude function used to for straight wave propagation
    return np.exp(1j*(k*v3)) 

geometry = [mp.Block(mp.Vector3(mp.inf,2,mp.inf), #infinite block
                     e1 = mp.Vector3(np.cos(theta),np.sin(theta)), #decides 2 axis which the block is rotated in
                     e2 = mp.Vector3(-np.sin(theta),np.cos(theta)),
                     center = mp.Vector3(0,10), #center should be high
                     material = mp.Medium(epsilon = 2.31) #glass
                    )]
sources = [mp.Source(mp.ContinuousSource(frequency=0.633), #0.633 = 633nm?
                    component=mp.Ez, #in ez direction not really sure what polarization has on these stuff
                    size = mp.Vector3(8,0), #needs to encompass the whole cell for it to be straight
                    center=mp.Vector3(0,-6), #just put it right around the bottom limit
                    amp_func = ampfunc #amp function
                    )]

sim = mp.Simulation(cell_size=cell,
    	            boundary_layers=pml_layers,
                    #geometry=geometry, #the geometry doesn't really work for now? Not really sure how
                    sources=sources, 
                    resolution=resolution,
                    k_point = k #need to define this
                    #default_material = mp.Medium('air') #this doesn't really work
                    )
#%%
sim.run(mp.at_every(2, mp.output_png(mp.Ez, "-Zc dkbluered")),until=20) #saves jpeg files onto the working directory so be careful  
